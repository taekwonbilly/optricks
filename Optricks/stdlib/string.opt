/*
def int string.length(){
	return this._size;
};


gen char string.iterator(){
	for(int i = 0; i<this._size; i++)
		yield this[i];
}
*/

gen char c_string.iterator(){
  int i = 0;
	while this[i]!='\0':{
		yield this[i];
		i++;
	}
}
/*
def bool :==(string a,string b){
	if(a._size!=b._size) return false;
	for(int i = 0; i<a._size; i++)
		if(a[i]!=b[i]) return false;
	return true;
};

def bool operator!=(string a,string b){
	if(a._size!=b._size) return true;
	for(int i = 0; i<a._size; i++) if(a[i]!=b[i]) return true;
	return false;
};

def bool operator < (string a, string b){
	int n = (a._size<b._size)?a._size:b._size;
	for(int i=0; i<n; i++)
		if(a[i]!=b[i]) return a[i]<b[i];
  return a._size<b._size;
};

def bool operator > (string a, string b){
	int n = (a._size<b._size)?a._size:b._size;
	for(int i=0; i<n; i++)
		if(a[i]!=b[i]) return a[i]>b[i];
  return a._size>b._size;
};

def bool operator <= (string a, string b){
	int n = (a._size<b._size)?a._size:b._size;
	for(int i=0; i<n; i++)
		if(a[i]!=b[i]) return a[i]<b[i];
  return a._size<=b._size;
};

def bool operator >= (string a, string b){
	int n = (a._size<b._size)?a._size:b._size;
	for(int i=0; i<n; i++)
		if(a[i]!=b[i]) return a[i]<b[i];
  return a._size>=b._size;
};
*/
def lang.c.string.:<(lang.c.string b){
	for(int i=0; ; i++){
		if(this[i]!=b[i]) return this[i]<b[i];
		if(this[i]=='\0') return false;
	}
	return true;
};

def lang.c.string.:> (lang.c.string b){
	for(int i=0; ; i++){
		if(this[i]!=b[i]) return this[i]>b[i];
		if(this[i]=='\0') return false;
	}
	return true;
};

def lang.c.string.:<= (lang.c.string b){
	for(int i=0; ; i++){
		if(this[i]!=b[i]) return this[i]<=b[i];
		if(this[i]=='\0') return false;
	}
	return true;
};

def lang.c.string.:>= (lang.c.string b){
	for(int i=0; ; i++){
		if(this[i]!=b[i]) return this[i]>=b[i];
		if(this[i]=='\0') return false;
	}
	return true;
};

def lang.c.string.:==(lang.c.string b){
	for(int i = 0; ; i++){
		if(this[i]!=b[i]) return false;
		if(this[i]=='\0') return true;
	}
	return true;
};

def lang.c.string.:!=(lang.c.string b){
	for(int i = 0; ; i++){
		if(this[i]!=b[i]) return true;
		if(this[i]=='\0') return false;
	}
	return true;
};
