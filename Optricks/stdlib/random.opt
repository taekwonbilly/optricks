def FOREACH( int[] a, int& b, void% v){
	for(int i=0; i<a.length;i++){
		b =a[i]
		v()
	}

}
class primitive random{
	static def int rand_interval(int min, int max){
		assert(max>min);
		auto range = max-min;
		auto buckets = RAND_MAX/range;
		auto limit = buckets*range;
		int r;
		do{
			r = rand();
		}while(r>=limit);
		return min+ r/buckets;
	}

}
extern lang.c.int time(lang.c.pointer=null);
extern void srand(lang.c.int=time());
srand();
def FOR(void% i, bool% b=true, void% c){
	i();
	while(b()){
		c();
	}

}
def repeat(void% a, int b){
	for(int i=0; i<b; i++) a();
}

def repeat10(void% a){
	for(int i=0; i<10; i++) a();
}


def inc(int& a){
	a++;
}
def void lazy(int% i){
       println("before: lazy");
       printf("%d\n", i());
       println("after: lazy");
}
/*
class T{
static int a;
static def test(){
	int& a = & T.a;
	a = 3;
	printf("%d\n",a);
	lazy(a++);
	printf("%d\n",a);
}
static def test2(){
	int& a = & T.a;
	a = 3;
	printf("%d\n",a);
	lazy(a);
	printf("%d\n",a);
}
static def printr(int a){
	printf("%d\n", a);
}
static def test3(){
	int& a = & T.a;
	a = 3;
	printf("%d\n",a);
	printr(a++);
	printf("%d\n",a);
}

static def test4(){
	int& a = & T.a;
	a = 3;
	printr(a);
	inc(&a);
	printr(a);
}
}
*/
